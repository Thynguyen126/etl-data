version: '3'

networks:
  datapipeline:
    driver: bridge

volumes:
  datapipeline:

services:  
  spark:
    image: docker.io/bitnami/spark:3
    container_name: spark_master
    hostname: spark_master
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '7070:7070'
      - '8080:8080'
      - '4040:4040'
    networks:
      - datapipeline

  spark_node:
    image: docker.io/bitnami/spark:3
    container_name: spark_worker
    hostname: spark_master
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_MASTER_URL=spark://spark-master:7070
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=1
    ports:
      - '8080:8080'
    networks:
      - datapipeline

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - datapipeline

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - datapipeline

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    init: true
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic orders --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-1:29092 --list
      "

  postgres:
    image: postgres:13
    container_name: postgresql
    ports:
      - "5432:5432"
    volumes:
          - ./scripts/postgres-dbs:/docker-entrypoint-initdb.d
          - ./data:/tmp/data
          - ./scripts/ddl:/tmp/ddl
    environment:
      POSTGRES_MULTIPLE_DATABASES: db_bronze_zone,db_silver_zone,db_gold_zone
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin@123
    networks:
      - datapipeline

  metabase:
    image: metabase/metabase
    ports:
      - "8081:3000"
    networks:
      - datapipeline